<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var array $references
 */

if (!count($references)) return;

// Prepare the list.
$letters = [];
if (array_key_exists('initial', $references[key($references)])) {
    foreach ($references as $reference => $referenceData) {
        $initial = $referenceData['initial'];
        if (empty($letters[$initial])) {
            $letters[preg_match('/\W|\d/u', $initial) ? '0-9' : $initial] = true;
        }
    }
} else {
    foreach ($references as $reference => $referenceData) {
        $initial = mb_strtoupper(mb_substr($reference, 0, 1));
        if (empty($letters[$initial])) {
            $letters[preg_match('/\W|\d/u', $initial) ? '0-9' : $initial] = true;
        }
    }
}

// Add the empty letters.
// Get the default list of initials for latin. To be updated for non-latin references.
// Anyway, even in latin, some characters are not transcoded, like Å’.
$alphabet = ['0-9' => false] + array_fill_keys(range('A', 'Z'), false);
$letters = array_merge($alphabet, $letters);
// Don't display symbols if useless.
if (empty($letters['0-9'])) unset($letters['0-9']);

// Display the list of initials.
$paginationList = '<ul class="pagination-list">';
foreach ($letters as $letter => $isSet):
    $paginationList .= $isSet
        ? sprintf('<li class="pagination-range"><a href="#%s">%s</a></li>', $letter, $letter)
        : sprintf('<li class="pagination-range"><span>%s</span></li>', $letter);
endforeach;
$paginationList .= '</ul>';

// Return the html.
echo $paginationList;
